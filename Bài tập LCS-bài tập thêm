#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int longestCommonSubsequence(vector<int>& a, vector<int>& b) {
    int m = a.size();
    int n = b.size();

    // Tạo một bảng 2D để lưu độ dài của LCS
    vector<vector<int>> dp(m + 1, vector<int>(n + 1, 0));

    // Xây dựng bảng dp
    for (int i = 1; i <= m; ++i) {
        for (int j = 1; j <= n; ++j) {
            if (a[i - 1] == b[j - 1]) {
                dp[i][j] = dp[i - 1][j - 1] + 1;
            } else {
                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
            }
        }
    }

    // Kết quả là độ dài của LCS
    return dp[m][n];
}

int main() {
    int m, n;
    cout << "Nhap so phan tu cua day a: ";
    cin >> m;

    cout << "Nhap day a:\n";
    vector<int> a(m);
    for (int i = 0; i < m; ++i) {
        cin >> a[i];
    }

    cout << "Nhap so phan tu cua day b: ";
    cin >> n;

    cout << "Nhap day b:\n";
    vector<int> b(n);
    for (int i = 0; i < n; ++i) {
        cin >> b[i];
    }

    // Tìm và in ra độ dài của LCS
    int result = longestCommonSubsequence(a, b);
    cout << "Do dai cua day con chung dai nhat (LCS) la: " << result << endl;

    return 0;
}
